#!/usr/bin/env bash
# Run lint command for Node.js projects
set -Eeuo pipefail
trap 'echo "${BASH_SOURCE[0]}: line $LINENO: $BASH_COMMAND: exitcode $?"' ERR
SCRIPT_NAME="$(basename "${BASH_SOURCE[0]}")"
REPO_DIR="$(git rev-parse --show-toplevel)"
cd "$REPO_DIR"

YELLOW='\033[1;33m'
CYAN='\033[36m'
NC='\033[0m' # No Color

# Set VERBOSE=non-number to VERBOSE=1, otherwise use the number
[[ "${VERBOSE:-0}" =~ ^[0-9]+$ ]] && VERBOSE="${VERBOSE:-0}" || VERBOSE=1
debug () {
    [[ "$VERBOSE" -lt 1 ]] || echo >&2 -e "🔍 ${CYAN}$*${NC}"
}
warn () {
    echo >&2 -e "⚠️ ${YELLOW}$*${NC}"
}

# Check if this is a Node.js project
if [[ ! -f "package.json" ]]; then
    debug "$SCRIPT_NAME: package.json not found; skipping nodejs lint"
    exit 0
fi

# Check if package.json has a lint script
if ! grep -q '"lint"' package.json; then
    debug "$SCRIPT_NAME: No lint script found in package.json; skipping"
    exit 0
fi

# Determine which package manager to use
if [[ -f "pnpm-lock.yaml" ]]; then
    PKG_MANAGER="pnpm"
elif [[ -f "yarn.lock" ]]; then
    PKG_MANAGER="yarn"
else
    PKG_MANAGER="npm"
fi

# Check if package manager is available
if ! command -v "$PKG_MANAGER" &>/dev/null; then
    warn "$SCRIPT_NAME: $PKG_MANAGER not found; skipping nodejs lint"
    exit 0
fi

# Run the lint command
debug "$SCRIPT_NAME: Running $PKG_MANAGER run lint"
exec "$PKG_MANAGER" run lint
