#!/usr/bin/env bash
set -Eeuo pipefail
trap 'echo "${BASH_SOURCE[0]}: line $LINENO: $BASH_COMMAND: exitcode $?"' ERR
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

HOOKS=()
HOOKS+=(pre-commit)
HOOKS+=(prepare-commit-msg)
HOOKS+=(commit-msg)
HOOKS+=(post-commit)
HOOKS+=(pre-rebase)
HOOKS+=(post-checkout)
HOOKS+=(post-merge)
HOOKS+=(pre-push)
HOOKS+=(post-rewrite)
HOOKS+=(pre-merge-commit)
HOOKS+=(applypatch-msg)
HOOKS+=(pre-applypatch)
HOOKS+=(post-applypatch)
HOOKS+=(sendemail-validate)
HOOKS+=(pre-receive)
HOOKS+=(update)
HOOKS+=(post-receive)
HOOKS+=(post-update)
HOOKS+=(push-to-checkout)

# Ensure hook template is executable
HOOKS_DIR="$SCRIPT_DIR/hooks"
cd "$HOOKS_DIR"
chmod +x "__hook-template"

# Create all the hooks and make a directory for multi-hooking
for hook in "${HOOKS[@]}"; do
  mkdir -p "$hook.d"
  if [[ -n "${FORCE:-}" ]] || [[ ! -f "$hook" ]]; then
    /bin/ln -sf "__hook-template" "$hook"
  fi
done

# Add the hooks directory to the global git configuration
# - Convert (e.g.) /Users/foo/bar/baz to ~/bar/baz
HOOKS_PATH="${HOOKS_DIR/$HOME/\~}"
git config --global core.hooksPath "$HOOKS_PATH"
